{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  mode: \"light\",\n  user: null,\n  profile: null,\n  token: null,\n  posts: []\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setMode: state => {\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n    },\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.profile = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: state => {\n      state.user = null;\n      state.profile = null;\n      state.token = null;\n    },\n    setFriends: (state, action) => {\n      if (state.user) {\n        state.user.friends = action.payload.friends;\n      } else {\n        console.error(\"user friends non existent\");\n      }\n    },\n    setProfile: (state, action) => {\n      state.profile = action.payload.profile;\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload.posts;\n    },\n    setPost: (state, action) => {\n      const updatePosts = state.posts.map(post => {\n        if (post._id === action.payload._id) {\n          return action.payload.post;\n        }\n        return post;\n      });\n      state.posts = updatePosts;\n    }\n  }\n});\nexport const {\n  setMode,\n  setLogin,\n  setLogout,\n  setFriends,\n  setProfile,\n  setPosts,\n  setPost\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","user","profile","token","posts","authSlice","name","reducers","setMode","state","setLogin","action","payload","setLogout","setFriends","friends","console","error","setProfile","setPosts","setPost","updatePosts","map","post","_id","actions","reducer"],"sources":["D:/Users/Desktop/NOT's/learning/social_media/frontend/src/store/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState = {\r\n  mode: \"light\",\r\n  user: null,\r\n  profile: null,\r\n  token: null,\r\n  posts: [],\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    setMode: (state) => {\r\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\r\n    },\r\n    setLogin: (state, action) => {\r\n      state.user = action.payload.user;\r\n      state.profile = action.payload.user;\r\n      state.token = action.payload.token;\r\n    },\r\n    setLogout: (state) => {\r\n      state.user = null;\r\n      state.profile = null;\r\n      state.token = null;\r\n    },\r\n    setFriends: (state, action) => {\r\n      if (state.user) {\r\n        state.user.friends = action.payload.friends;\r\n      } else {\r\n        console.error(\"user friends non existent\");\r\n      }\r\n    },\r\n    setProfile: (state, action) => {\r\n      state.profile = action.payload.profile;\r\n    },\r\n    setPosts: (state, action) => {\r\n      state.posts = action.payload.posts;\r\n    },\r\n    setPost: (state, action) => {\r\n      const updatePosts = state.posts.map((post) => {\r\n        if (post._id === action.payload._id) {\r\n          return action.payload.post;\r\n        }\r\n        return post;\r\n      });\r\n      state.posts = updatePosts;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setMode,\r\n  setLogin,\r\n  setLogout,\r\n  setFriends,\r\n  setProfile,\r\n  setPosts,\r\n  setPost,\r\n} = authSlice.actions;\r\n\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGP,WAAW,CAAC;EACnCQ,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,OAAO,EAAGC,KAAK,IAAK;MAClBA,KAAK,CAACT,IAAI,GAAGS,KAAK,CAACT,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACxD,CAAC;IACDU,QAAQ,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3BF,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO,CAACX,IAAI;MAChCQ,KAAK,CAACP,OAAO,GAAGS,MAAM,CAACC,OAAO,CAACX,IAAI;MACnCQ,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACpC,CAAC;IACDU,SAAS,EAAGJ,KAAK,IAAK;MACpBA,KAAK,CAACR,IAAI,GAAG,IAAI;MACjBQ,KAAK,CAACP,OAAO,GAAG,IAAI;MACpBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC;IACDW,UAAU,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC7B,IAAIF,KAAK,CAACR,IAAI,EAAE;QACdQ,KAAK,CAACR,IAAI,CAACc,OAAO,GAAGJ,MAAM,CAACC,OAAO,CAACG,OAAO;MAC7C,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;MAC5C;IACF,CAAC;IACDC,UAAU,EAAEA,CAACT,KAAK,EAAEE,MAAM,KAAK;MAC7BF,KAAK,CAACP,OAAO,GAAGS,MAAM,CAACC,OAAO,CAACV,OAAO;IACxC,CAAC;IACDiB,QAAQ,EAAEA,CAACV,KAAK,EAAEE,MAAM,KAAK;MAC3BF,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACR,KAAK;IACpC,CAAC;IACDgB,OAAO,EAAEA,CAACX,KAAK,EAAEE,MAAM,KAAK;MAC1B,MAAMU,WAAW,GAAGZ,KAAK,CAACL,KAAK,CAACkB,GAAG,CAAEC,IAAI,IAAK;QAC5C,IAAIA,IAAI,CAACC,GAAG,KAAKb,MAAM,CAACC,OAAO,CAACY,GAAG,EAAE;UACnC,OAAOb,MAAM,CAACC,OAAO,CAACW,IAAI;QAC5B;QACA,OAAOA,IAAI;MACb,CAAC,CAAC;MACFd,KAAK,CAACL,KAAK,GAAGiB,WAAW;IAC3B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXb,OAAO;EACPE,QAAQ;EACRG,SAAS;EACTC,UAAU;EACVI,UAAU;EACVC,QAAQ;EACRC;AACF,CAAC,GAAGf,SAAS,CAACoB,OAAO;AAGrB,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}